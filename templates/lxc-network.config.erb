# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).
# This file is managed by Puppet see lxc class
source /etc/network/interfaces.d/*

auto lo
iface lo inet loopback

<% if @public_bond == 'yes' %>
<% if @public_bond_config_version == '2' %>
<% @public_slaves.each do |publicslave| -%>
auto <%=publicslave -%>

<% end -%>

auto <%= @public_interface %>
iface <%= @public_interface %> inet manual
    bond-mode <%= @public_bond_mode %>
    bond-miimon <%= @public_bond_miimon %>
    bond-downdelay <%= @public_bond_downdelay %>
    bond-updelay <%= @public_bond_updelay %>
    slaves none
    up /usr/sbin/ifenslave <%= @public_interface %> <% @public_slaves.each do |publicslave| -%><%=publicslave -%> <% end -%>
<% else %>
<% @public_slaves.each do |publicslave| -%>
auto <%=publicslave %>
iface <%=publicslave %> inet manual
    bond-mode <%= @public_bond_mode %>
    bond-master <%= @public_interface %> 
    bond-miimon <%= @public_bond_miimon %>
    bond-downdelay <%= @public_bond_downdelay %>
    bond-updelay <%= @public_bond_updelay %>
<% if @public_bond_mode == '802.3ad' %>
    bond-lacp-rate 1 <%= @public_bond_lacp_rate %>
    bond-xmit-hash-policy <%= @public_bond_xmit_hash_policy %>
<% end -%>
<% end -%>
auto <%= @public_interface %>
iface <%= @public_interface %> inet manual
    bond-mode <%= @public_bond_mode %>
    bond-miimon <%= @public_bond_miimon %>
    bond-downdelay <%= @public_bond_downdelay %>
    bond-updelay <%= @public_bond_updelay %>
<% if @public_bond_mode == '802.3ad' %>
    bond-lacp-rate 1 <%= @public_bond_lacp_rate %>
    bond-xmit-hash-policy <%= @public_bond_xmit_hash_policy %>
<% end -%>
    bond-slaves none

<% end %>
<% end %>


<% if @public_vlan == 'yes' %>
auto <%= @public_interface %>.<%= @public_vlanid %>
iface <%= @public_interface %>.<%= @public_vlanid %> manual
  vlan-raw-device <%= @public_interface %>
<% end %>

auto <%= @public_bridge %>
iface <%= @public_bridge %> inet static
  address <%= @public_ip %>
  netmask <%= @public_nm %>
<% if @public_gw != nil %>
  gateway <%= @public_gw %>
<% end %>
  post-up iptables -t nat -A POSTROUTING -s <%= @private_ip %>/<%= @private_nm_cidr %> ! -d <%= @private_ip %>/<%= @private_nm_cidr %> -o <%= @public_bridge %> -j MASQUERADE
<% if @public_bridge_alias == 'yes' %>
<% else -%>
<% if @public_vlan == 'yes' -%>
  bridge_ports <%= @public_interface %>.<%= @public_vlanid %>
<% else -%>
  bridge_ports <%= @public_interface %>
<% end -%>
  bridge_fd 0
  bridge_stp <%= @public_stp %>
<% end -%>
  post-up /sbin/ip link add link <%= @public_bridge %> name <%= @public_macvlan %> type macvlan mode bridge
  post-up /sbin/ifconfig <%= @public_macvlan %> up

<% @public_alias.each do |ipalias| -%>
<% if ipalias.has_key?('ip') and ipalias.has_key?('id') and ipalias.has_key?('netmask')-%>
auto <%= @public_bridge %>:<%= ipalias['id'] %>
iface <%= @public_bridge %>:<%= ipalias['id'] %> inet static
  address <%= ipalias['ip'] %>
  netmask <%= ipalias['netmask'] %>
<% if ipalias.has_key?('masquerade') and ipalias.has_key?('cidr')-%>
  post-up iptables -t nat -A POSTROUTING -s <%= ipalias['ip'] %>/<%= ipalias['cidr'] %> ! -d <%= ipalias['ip'] %>/<%= ipalias['cidr'] %> -o <%= @public_bridge %> -j MASQUERADE
<% end -%>
<% end -%>
<% end -%>



<% if @private_bond == 'yes' %>
auto <%= @private_interface %>
iface <%= @private_interface %> inet manual
    slaves <% @private_slaves.each do |privateslave| -%><%=privateslave -%> <% end -%>

    bond-mode <%= @private_bond_mode %>
    bond-miimon 100
    bond-downdelay 200
    bond-updelay 200
<% end %>


<% if @private_vlan == 'yes' %>
auto <%= @private_interface %>.<%= @private_vlanid %>
iface <%= @private_interface %>.<%= @private_vlanid %> inet manual
    vlan-raw-device <%= @private_interface %>
<% end %>

auto <%= @private_bridge %>
iface <%= @private_bridge %> inet static
  address <%= @private_ip %>
  netmask <%= @private_nm %>
<% if @private_bridge_alias == 'yes' %>
<% else -%>
<% if @private_vlan == 'yes' -%>
  bridge_ports <%= @private_interface %>.<%= @private_vlanid %>
<% else -%>
  bridge_ports <%= @private_interface %>
<% end -%>
  bridge_fd 0
  bridge_stp <%= @private_stp %>
<% end -%>
  post-up /sbin/ip link add link <%= @private_bridge %> name <%= @private_macvlan %> type macvlan mode bridge
  post-up /sbin/ifconfig <%= @private_macvlan %> up
  post-up /etc/network/if-up.d/local-containers

<% @private_alias.each do |ipalias| -%>
<% if ipalias.has_key?('ip') and ipalias.has_key?('id') and ipalias.has_key?('netmask')-%>
auto <%= @private_bridge %>:<%= ipalias['id'] %>
iface <%= @private_bridge %>:<%= ipalias['id'] %> inet static
  address <%= ipalias['ip'] %>
  netmask <%= ipalias['netmask'] %>
<% end -%>
<% end -%>

<% @private_aditional_vlan.each do |itf| -%>
<% if itf.has_key?('raw_device') and itf.has_key?('vlanid') and itf.has_key?('bridge_device') and itf.has_key?('mvlan_device')-%>
auto <%= itf['raw_device'] %>.<%= itf['vlanid'] %>
iface <%= itf['raw_device'] %>.<%= itf['vlanid'] %> inet manual
    vlan-raw-device <%= itf['raw_device'] %>

auto <%= itf['bridge_device'] %>
<% if itf.has_key?('ip') and itf.has_key?('id') and itf.has_key?('netmask')-%>
  iface <%= itf['bridge_device'] %> inet static
  address <%= itf['ip'] %>
  netmask <%= itf['netmask'] %>
<% else -%>
  iface <%= itf['bridge_device'] %> inet manual
<% end -%>
  bridge_ports <%= itf['raw_device'] %>.<%= itf['vlanid'] %>
  bridge_fd 0
  bridge_stp <%= @private_stp %>
  post-up /sbin/ip link add link <%= itf['bridge_device'] %> name <%= itf['mvlan_device'] %> type macvlan mode bridge
  post-up /sbin/ifconfig <%= itf['mvlan_device'] %> up
  post-up /etc/network/if-up.d/local-containers
<% end -%>
<% end -%>
